{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { rootReducer } from './rootReducer';\nimport createSagaMiddleware from \"@redux-saga/core\";\nimport productSaga from \"./product/product.saga\";\nlet sagaMiddleware = createSagaMiddleware();\n// const middleware = [...getDefaultMiddleware({ thunk: false }), sagaMiddleware];\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: [sagaMiddleware]\n});\nsagaMiddleware.run(productSaga);","map":{"version":3,"names":["configureStore","getDefaultMiddleware","rootReducer","createSagaMiddleware","productSaga","sagaMiddleware","store","reducer","middleware","run"],"sources":["D:/development/test/test-task-for-kit-global/test-task/src/store/store.js"],"sourcesContent":["import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { rootReducer } from './rootReducer'; \r\nimport createSagaMiddleware from \"@redux-saga/core\";\r\nimport productSaga from \"./product/product.saga\";\r\n\r\n\r\nlet sagaMiddleware = createSagaMiddleware();\r\n// const middleware = [...getDefaultMiddleware({ thunk: false }), sagaMiddleware];\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: [sagaMiddleware],\r\n})\r\n\r\nsagaMiddleware.run(productSaga);"],"mappings":"AAAA,SAASA,cAAc,EAAEC,oBAAoB,QAAQ,kBAAkB;AACvE,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAOC,oBAAoB,MAAM,kBAAkB;AACnD,OAAOC,WAAW,MAAM,wBAAwB;AAGhD,IAAIC,cAAc,GAAGF,oBAAoB,EAAE;AAC3C;;AAEA,OAAO,MAAMG,KAAK,GAAGN,cAAc,CAAC;EAChCO,OAAO,EAAEL,WAAW;EACpBM,UAAU,EAAE,CAACH,cAAc;AAC/B,CAAC,CAAC;AAEFA,cAAc,CAACI,GAAG,CAACL,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}